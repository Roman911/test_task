{"version":3,"file":"main.cb2b8eb809b0ab5a1405.js","mappings":"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","sources":["webpack://test_task/./src/scripts/modal.js","webpack://test_task/./src/scripts/addCard.js","webpack://test_task/./src/scripts/removeCard.js","webpack://test_task/./src/scripts/sessionStorage.js","webpack://test_task/./src/scripts/svipe.js","webpack://test_task/./src/scripts/index.js"],"sourcesContent":["//імгорт глобальних зміних\r\nimport { posts, removePosts } from \"./index\";\r\n\r\n//Елемент в який будемо добавляти модалку\r\nconst bodySelector = document.querySelector(\"body\");\r\n\r\nlet modalIsOpen = false\r\n\r\n//Шаблон карточок в модальному вікні\r\nconst modalContentItemHTML = (post) => {\r\n  return `<div class=\"modal__img\"></div>\r\n        <div class=\"modal__title\">\r\n          <h2>Card ${post.id}</h2>\r\n        </div>\r\n        <div class=\"modal__body\">\r\n          <h4>\r\n            ${post.title}\r\n          </h4>\r\n          <p>\r\n            ${post.body}\r\n          </p>\r\n        </div>`;\r\n};\r\n\r\n//Шаблон модального вікна\r\nconst modalCardsHTML = () => {\r\n  const cardsMap = removePosts\r\n    .map((i) => {\r\n      return `<div class=\"modal__card shadow\" data-id=\"${i.id}\">\r\n            <div class=\"card__img\"></div>\r\n            <div class=\"card__body\">\r\n              <button class=\"card__btn\" data-action=\"reestablish\">\r\n                <svg class=\"card__svg\" aria-hidden=\"true\" viewBox=\"0 0 24 24\" data-action=\"reestablish\">\r\n                  <path d=\"M9 16h6v-6h4l-7-7-7 7h4zm-4 2h14v2H5z\" data-action=\"reestablish\"></path>\r\n                </svg>\r\n              </button>\r\n              <h5>Card ${i.id}</h5>\r\n              <p>\r\n                ${i.title}\r\n              </p>\r\n            </div>\r\n          </div>`;\r\n    })\r\n    .join(\"\");\r\n  \r\n  if (removePosts.length === 0) {\r\n    return `<div class=\"modal__body\">\r\n      <h2>Ничего ненайдено</h2>\r\n    </div>`;\r\n  } else {\r\n    return `<div class=\"modal__body\">\r\n          ${cardsMap}\r\n          <div class=\"modal__btn\">\r\n            <button data-action=\"reestablishAll\">Востановыть все</button>\r\n          </div>\r\n        </div>`;\r\n  }\r\n};\r\n\r\nconst modalItemHTML = (content) => {\r\n  return `<div class=\"modal\" data-content=\"modal\">\r\n      <div class=\"modal__content\">\r\n        ${content}\r\n      </div>\r\n    </div>`;\r\n};\r\n\r\n//Відкриваємо модальне вікно з меню\r\nwindow.addEventListener('click', (event) => {\r\n  if(event.target.dataset.action === \"cart\") {\r\n    if(!modalIsOpen) {\r\n      bodySelector.insertAdjacentHTML(\"beforeend\", modalItemHTML(modalCardsHTML()));\r\n      modalIsOpen = true\r\n    }\r\n  }\r\n})\r\n\r\n//Відкриваємо модальне вікно з карточок\r\nwindow.addEventListener(\"click\", (event) => {\r\n  if (event.target.dataset.action === \"more\") {\r\n    const counterWrapper = event.target.closest(\".card\");\r\n\r\n    const post = posts.find((item) => item.id === +counterWrapper.dataset.id);\r\n\r\n    bodySelector.insertAdjacentHTML(\r\n      \"beforeend\",\r\n      modalItemHTML(modalContentItemHTML(post))\r\n    );\r\n  }\r\n});\r\n\r\n//Закриваємо модалку\r\n//Відслідковуємо клік\r\nexport const closeModal = () => {\r\n  const modal = document.querySelector('[data-content=\"modal\"]');\r\n  if(modal) {\r\n    modal.remove();\r\n    modalIsOpen = false;\r\n  }\r\n}\r\n\r\nwindow.addEventListener(\"click\", (event) => {\r\n  if (event.target.dataset.content === \"modal\") {\r\n    //const modal = document.querySelector('[data-content=\"modal\"]');\r\n    closeModal()\r\n  }\r\n});\r\n\r\n//Відслідковуємо натиску \"Escape\"\r\nwindow.addEventListener(\"keyup\", (event) => {\r\n  if (event.code === \"Escape\") {\r\n    //const modal = document.querySelector('[data-content=\"modal\"]');\r\n    closeModal()\r\n  }\r\n});\r\n","//імгорт глобальних зміних\r\nimport { posts, removePosts } from './index'\r\nimport { closeModal } from './modal'\r\n\r\n//Елемент в який будемо добавляти карточки\r\nconst gridWrapper = document.querySelector(\".grid\");\r\n\r\n//Кнопка додати\r\nconst btnAdd = document.querySelector('[data-action=\"add\"]');\r\n\r\nlet curent = 1;\r\n\r\nexport let fill = false;\r\n\r\nlet column;\r\nlet line;\r\n\r\n//Шаблон картки\r\nconst cardItemHTML = (json) => {\r\n  const windowInnerWidth = document.documentElement.clientWidth;\r\n\r\n  const st = windowInnerWidth < 420 ? `style=\"width: ${windowInnerWidth - 40}px\"` : 'style=\"\"'\r\n  return `<div class=\"card opacityNull shadow loading\" ${st} data-id=\"${json.id}\">\r\n            <div class=\"card__img\">\r\n            </div>\r\n            <div class=\"card__body\">\r\n              <div class=\"card__title\">\r\n                <h3>Card ${json.id}</h3>\r\n              </div>\r\n              <div class=\"card__text\">\r\n                <p>\r\n                  ${json.title}\r\n                </p>\r\n              </div>\r\n              <button class=\"btn\" data-action=\"more\">Подробнее</button>\r\n            </div>\r\n          </div>`;\r\n};\r\n\r\n//Додаємо карточку\r\nexport const addCard = (json) => {\r\n  gridWrapper.insertAdjacentHTML(\"beforeend\", cardItemHTML(json));\r\n  const card = document.querySelector(`[data-id=\"${json.id}\"]`);\r\n  setTimeout(() => {\r\n    card.classList.remove(\"opacityNull\");\r\n  }, 50);\r\n  setTimeout(() => {\r\n    card.classList.remove(\"loading\");\r\n  }, 3000);\r\n  ++curent;\r\n};\r\n\r\n//Получаєм дані із сервера\r\nexport const newCard = () => {\r\n  fetch(`https://jsonplaceholder.typicode.com/posts/${curent}`)\r\n    .then((response) => response.json())\r\n    .then((json) => {\r\n      addCard(json);\r\n      posts.push(json);\r\n    });\r\n};\r\n\r\n//обробляємо клік на \"Добавить\"\r\nbtnAdd.addEventListener(\"click\", () => {\r\n  newCard();\r\n});\r\n\r\n//Заповнюємо контейнер\r\n//цикл для плавного заповнення\r\nfunction* genFunc(a) {\r\n  for (let i = 0; i < a; i++) {\r\n    yield newCard();\r\n  }\r\n}\r\n\r\nconst fnSetInterval = (elements) => {\r\n  let gen = genFunc(elements);\r\n  const int = setInterval(() => {\r\n    let val = gen.next();\r\n\r\n    if (val.done) {\r\n      clearInterval(int);\r\n   }\r\n  }, 200);\r\n}\r\n\r\nexport const fn = (f) => {\r\n  fill = f\r\n}\r\n\r\n//обробляємо клік на \"Заполнить\"\r\nwindow.addEventListener(\"click\", (event) => {\r\n  if(event.target.dataset.action === \"fill\") {\r\n    //Визначаємо ширину та висоту екрану\r\n    const windowInnerWidth = document.documentElement.clientWidth;\r\n    const windowInnerHeight = document.documentElement.clientHeight;\r\n\r\n    //Визначаємо кількість елементів\r\n    line = Math.ceil((windowInnerHeight - 160) /380);\r\n\r\n    if(windowInnerWidth > 941 ) {\r\n      column = 4\r\n    } else if(windowInnerWidth > 681 && windowInnerWidth < 920) {\r\n      column = 3\r\n    } else if(windowInnerWidth > 421 && windowInnerWidth < 680) {\r\n      column = 2\r\n    } else {\r\n      column = 1\r\n    }\r\n\r\n    let elements = column*line - posts.length;\r\n\r\n    fnSetInterval(elements)\r\n\r\n    fn(true)\r\n  }\r\n});\r\n\r\n//Відслідковуєм скрол\r\nwindow.addEventListener('scroll', () =>{\r\n  if(fill){\r\n    const pageHeight = document.documentElement.scrollHeight;\r\n    const windowInnerHeight = document.documentElement.clientHeight;\r\n    if(pageHeight===windowInnerHeight+window.scrollY){\r\n\r\n      const el = posts.length%column === 0 ? column : column - posts.length%column+4;\r\n      \r\n      fnSetInterval(el)\r\n    }\r\n  }\r\n})\r\n\r\n//Відновлюємо видаленні карточки\r\n//Відновлюєм по одні\r\nwindow.addEventListener('click', (event) => {\r\n  if(event.target.dataset.action === \"reestablish\") {\r\n    const counterWrapper = event.target.closest(\".modal__card\");\r\n\r\n    removePosts.forEach((i, index)=> {\r\n      if(i.id === +counterWrapper.dataset.id) {\r\n        addCard(i);\r\n        posts.push(i);\r\n        removePosts.splice(index,1);\r\n      }\r\n    });\r\n\r\n    counterWrapper.remove()\r\n    if(removePosts.length === 0) {\r\n      closeModal()\r\n    }\r\n  }\r\n})\r\n\r\n//Відновлюєм всі\r\nwindow.addEventListener('click', (event) => {\r\n  if(event.target.dataset.action === \"reestablishAll\") {\r\n    for(let i = 0; i < removePosts.length; i++) {\r\n      addCard(removePosts[i]);\r\n      posts.push(removePosts[i]);\r\n    }\r\n    closeModal()\r\n  }\r\n})","import { posts, removePosts } from './index';\r\nimport { fn } from './addCard';\r\n\r\n//Кнопка \"Заполнить\"\r\nconst btnFill = document.querySelectorAll('[data-action=\"fill\"]');\r\n//const btnFillBN = document.querySelector('.bottom-navigation__btn')\r\n\r\n//Видаляєм карточку\r\nexport const removeCard = (posts, removePosts) => {\r\n  const lastPost = posts.splice(-1, 1);\r\n  removePosts.push(lastPost[0]);\r\n  const removePost = document.querySelector(`[data-id=\"${lastPost[0].id}\"]`);\r\n  removePost.classList.add(\"opacityNull\");\r\n  setTimeout(() => {\r\n    removePost.remove();\r\n  }, 500);\r\n};\r\n\r\n//Відслідковуємо клик на \"Удалить\"\r\nwindow.addEventListener('click', (event) => {\r\n  if(event.target.dataset.action === \"remove\") {\r\n    const windowInnerWidth = document.documentElement.clientWidth;\r\n    if (posts.length !== 0) {\r\n      removeCard(posts, removePosts);\r\n    }\r\n  }\r\n});\r\n\r\n//Відслідковуємо клик на \"Очистить\"\r\nwindow.addEventListener('click', (event) => {\r\n  if(event.target.dataset.action === \"clear\") {\r\n    const ln = posts.length;\r\n    if (ln > 1) {\r\n      for (let i = 0; i < ln - 1; i++) {\r\n        removeCard(posts, removePosts);\r\n      }\r\n    }\r\n    fn(false);\r\n    btnFill[0].disabled = true;\r\n    btnFill[1].disabled = true;\r\n  }\r\n});","import { posts, removePosts } from './index'\r\nimport { addCard } from './addCard'\r\n\r\nconst ss = () => {\r\n  let object = {\r\n    posts,\r\n    removePosts\r\n  }\r\n  sessionStorage.setItem('test', JSON.stringify(object));\r\n}\r\n\r\n//Записуємо дані в sessionStorage\r\nwindow.addEventListener(\"unload\", () => {\r\n  ss()\r\n});\r\n\r\n//Получаєм дані з sessionStorage\r\nwindow.addEventListener('DOMContentLoaded', () => {\r\n  const data = sessionStorage.getItem('test');\r\n  const dataParse = JSON.parse(data);\r\n\r\n  if (dataParse.posts.length !== 0) {\r\n    for(let i = 0; i < dataParse.posts.length; i++) {\r\n      posts.push(dataParse.posts[i])\r\n      addCard(posts[i])\r\n    }\r\n  }\r\n  \r\n  if (dataParse.removePosts.length !== 0) {\r\n    for(let i = 0; i < dataParse.removePosts.length; i++) {\r\n      removePosts.push(dataParse.removePosts[i])\r\n    }\r\n  }\r\n});","import { posts } from './index';\r\nimport { newCard, fill } from './addCard';\r\n\r\nconst list = document.querySelector('.grid');\r\n\r\nlet touchstartX = 0;\r\nlet touchendX = 0;\r\n\r\nlet i = 1;\r\nlet count = 1;\r\n\r\nlet position = 0; // положение ленты прокрутки\r\n\r\nconst next = () => {\r\n  const windowInnerWidth = document.documentElement.clientWidth;\r\n  \r\n  // сдвиг вправо\r\n  position -= windowInnerWidth;\r\n  if(fill) {\r\n    count = 0\r\n  } else {\r\n    count = 1\r\n  }\r\n  position = Math.max(position, -windowInnerWidth * (posts.length - count));\r\n  list.style.marginLeft = position + 'px';\r\n  i++\r\n\r\n  if(i > posts.length && fill) {\r\n    newCard()\r\n  }\r\n}\r\n\r\nconst prev = () => {\r\n  const windowInnerWidth = document.documentElement.clientWidth;\r\n  // сдвиг влево\r\n  position += windowInnerWidth;\r\n  // последнее передвижение влево может быть не на 3, а на 2 или 1 элемент\r\n  position = Math.min(position, 0)\r\n  list.style.marginLeft = position + 'px';\r\n}\r\n\r\nconst checkDirection = () => {\r\n  if (touchendX < touchstartX) {\r\n    next()\r\n  }\r\n  if (touchendX > touchstartX) {\r\n    prev()\r\n  }\r\n}\r\n\r\n\r\ndocument.addEventListener('touchstart', e => {\r\n  touchstartX = e.changedTouches[0].screenX\r\n})\r\n\r\ndocument.addEventListener('touchend', e => {\r\n  touchendX = e.changedTouches[0].screenX\r\n  checkDirection()\r\n})","import './addCard';\r\nimport \"./modal\";\r\nimport './removeCard';\r\nimport './sessionStorage';\r\nimport \"./svipe\";\r\n\r\n//Глобальні зміні\r\nexport const posts = [];\r\nexport const removePosts = [];"],"names":["bodySelector","document","querySelector","modalIsOpen","modalItemHTML","content","window","addEventListener","event","cardsMap","target","dataset","action","insertAdjacentHTML","removePosts","i","id","title","join","length","counterWrapper","closest","post","posts","find","item","body","modalContentItemHTML","closeModal","modal","remove","code","column","line","genFunc","gridWrapper","btnAdd","curent","fill","addCard","json","windowInnerWidth","documentElement","clientWidth","st","cardItemHTML","card","setTimeout","classList","newCard","fetch","then","response","push","a","fnSetInterval","elements","gen","int","setInterval","next","done","clearInterval","fn","f","windowInnerHeight","clientHeight","Math","ceil","scrollHeight","scrollY","el","forEach","index","splice","btnFill","querySelectorAll","removeCard","lastPost","removePost","add","ln","disabled","object","sessionStorage","setItem","JSON","stringify","data","getItem","dataParse","parse","list","touchstartX","touchendX","count","position","e","changedTouches","screenX","max","style","marginLeft","min","prev"],"sourceRoot":""}